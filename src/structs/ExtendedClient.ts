// Este arquivo define a classe `ExtendedClient`, que estende a funcionalidade do cliente padr√£o
// do Discord.js. Ele adiciona suporte para carregar e gerenciar comandos de slash, al√©m de
// fornecer m√©todos personalizados para inicializar o bot e lidar com erros de conex√£o.

import { Client, ClientOptions, Collection } from "discord.js";
import { SlashCommand } from "../structs/types/SlashCommand.js";
import dotenv from "dotenv";
import { Team } from '../types/team.d.js';
dotenv.config();

export class ExtendedClient extends Client {
  // Cole√ß√£o para armazenar os comandos carregados
  public commands: Collection<string, SlashCommand>;
  public teams?: Collection<string, Team>;

  constructor(options: ClientOptions) {
    super(options); // Passa as op√ß√µes para o construtor da classe base (Client)
    this.commands = new Collection();
  }

  /**
   * Inicia o bot e conecta ao Discord.
   */
  public async start() {
    try {
      // Valida se o token est√° definido
      if (!process.env.DISCORD_TOKEN) {
        throw new Error("‚ùå DISCORD_TOKEN n√£o est√° definido no arquivo .env.");
      }

      console.log("üîÑ Conectando ao Discord...");
      await this.login(process.env.DISCORD_TOKEN);
      console.log("‚úÖ Bot conectado com sucesso!");

      // Log para verificar comandos carregados
      console.log(`üì¶ Total de comandos carregados: ${this.commands.size}`);
    } catch (error) {
      console.error("‚ùå Erro ao conectar o bot:", error);
    }
  }
}
